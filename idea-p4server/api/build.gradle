plugins {
    id 'java-library'
    id 'p4ic.compat'
    id 'jacoco'
}


ideaApi.uses(
        'openapi',
        'core-api',
        'annotations-common',
        'annotations',
        'vcs-api-core',
        'vcs-api',

        'platform-api',
        'projectModel-api'
)
ideaImplementation.uses(
        // Look at how to pull in dependent libraries...
        'extensions',
        'util',
        'util-rt',

        'jdom',
        'picocontainer',
        'trove4j',
)
ideaTest.uses(
        'kotlin-runtime'
)

dependencies {
    //compatApi ()
    compatImplementation (
            project(':p4java'),
            project(':idea-compat:compat-api'),
            project(':swarm'),
            'org.apache.commons:commons-lang3:3.7'
    )
    compatTest(
            project(':idea-test-core'),
            project(':idea-compat:compat-api'),

            // TODO pull in the test jars from the test-core as part of the build.
            'junit:junit:4.12',
            'org.junit.jupiter:junit-jupiter-engine:5.1.0',
            'org.junit.platform:junit-platform-runner:1.1.0',
            'org.junit.platform:junit-platform-commons:1.1.0',
            'org.junit.platform:junit-platform-engine:1.1.0',
            'org.junit.platform:junit-platform-launcher:1.1.0',
            'org.junit.platform:junit-platform-suite-api:1.1.0',
            'org.junit.vintage:junit-vintage-engine:5.1.0',
            'org.opentest4j:opentest4j:1.0.0',
            'org.apiguardian:apiguardian-api:1.0.0',
            'net.bytebuddy:byte-buddy:1.8.0',
            'org.objenesis:objenesis:2.6',
    )
}

jacoco {
    toolVersion = '0.8.1'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = true
        html.enabled = true
    }
    classDirectories = sourceSets.mainIdea173.output
}

test {
    jacoco {
        append = false
    }
    useJUnitPlatform()
}

project.tasks.check.dependsOn 'jacocoTestReport'

// allow the test artifacts to be used by other projects
configurations {
    testArtifacts.extendsFrom testCompile
}
task testArtifactsJar(type: Jar) {
    group 'build'

    from sourceSets.test.output
    destinationDir = file("$buildDir/libs")
    classifier = 'test'
}
artifacts {
    testArtifacts testArtifactsJar
}

repositories {
    ivy {
        url "$rootDir/lib"
        layout "pattern", {
            artifact "main/[artifact]-[revision].[ext]"
            artifact "test/[artifact]-[revision].[ext]"
        }
    }
}



group 'net.groboclown.p4ic4idea'
version '1.0'
