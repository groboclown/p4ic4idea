plugins {
    id 'java-library'
}

dependencies {
    api (
            'com.google.code.findbugs:jsr305:3.0.1'
    )
    implementation (
            'com.jcraft:jzlib:1.1.3',
            'com.google.guava:guava:19.0',
            'commons-io:commons-io:2.5',
            'org.apache.commons:commons-lang3:3.7'
    )

    testImplementation (
            'junit:junit:4.12',
            'org.hamcrest:hamcrest-core:1.3',
            'org.junit.jupiter:junit-jupiter-api:5.1.0',
            'org.junit.jupiter:junit-jupiter-engine:5.1.0',
            'org.junit.platform:junit-platform-runner:1.1.0',
            'org.junit.platform:junit-platform-commons:1.1.0',
            'org.junit.platform:junit-platform-engine:1.1.0',
            'org.junit.platform:junit-platform-launcher:1.1.0',
            'org.junit.platform:junit-platform-suite-api:1.1.0',
            'org.junit.vintage:junit-vintage-engine:5.1.0',
            'org.apache.commons:commons-compress:1.16.1',
            'org.apache.commons:commons-exec:1.3',
            'com.nitorcreations:junit-runners:1.3',
            'org.reflections:reflections:0.9.11',
            'org.opentest4j:opentest4j:1.0.0',
            'org.mockito:mockito-core:2.0.86-beta',
            'net.bytebuddy:byte-buddy:1.8.0',
            'org.apiguardian:apiguardian-api:1.0.0',
            'com.googlecode.java-diff-utils:diffutils:1.3.0',
            'org.objenesis:objenesis:2.6',
            'org.slf4j:slf4j-api:1.7.25',
            'javassist:javassist:3.12.1.GA',
    )
    testRuntimeOnly (
            'org.junit.jupiter:junit-jupiter-engine:5.1.0',
    )

    testImplementation project(':p4d-test-core')
}

repositories {
    ivy {
        url "$rootDir/lib"
        layout "pattern", {
            artifact "main/[artifact]-[revision].[ext]"
            artifact "test/[artifact]-[revision].[ext]"
        }
    }
}

group 'net.groboclown.p4ic4idea'
version '1.0'


test {
    useJUnitPlatform()
    exclude 'com/perforce/p4java/impl/mapbased/server/cmd/**'
    exclude 'com/perforce/p4java/tests/dev/unit/**'
    exclude 'com/perforce/p4java/tests/qa/**'
}


tasks.getByName('test') {
    def testOutDir = project.file("$buildDir/test-out")

    workingDir = testOutDir

    doFirst {
        testOutDir.mkdirs()
    }
}

task integrationTest(type: Test, dependsOn: compileTestJava) {
    def testOutDir = project.file("$buildDir/test-out")

    useJUnitPlatform()
    workingDir = testOutDir
    enableAssertions true

    include 'com/perforce/p4java/impl/mapbased/server/cmd/**'
    include 'com/perforce/p4java/tests/dev/unit/**'
    include 'com/perforce/p4java/tests/qa/**'

    doFirst {
        //logger.lifecycle("Configurations:")
        //configurations.each {
        //    logger.lifecycle("  " + it.name)
        //}
        //logger.lifecycle("Classpath:")
        //classpath.asFileTree.visit {
        //    logger.lifecycle("  " + it)
        //}
        testOutDir.mkdirs()
    }

    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }
}
